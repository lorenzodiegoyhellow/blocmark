import { useState } from "react";
import { AppLayout } from "@/components/layout/app-layout";
import { zodResolver } from "@hookform/resolvers/zod";
import { useForm } from "react-hook-form";
import { z } from "zod";
import { Button } from "@/components/ui/button";
import {
  Form,
  FormControl,
  FormDescription,
  FormField,
  FormItem,
  FormLabel,
  FormMessage,
} from "@/components/ui/form";
import { Input } from "@/components/ui/input";
import { Textarea } from "@/components/ui/textarea";
import { RadioGroup, RadioGroupItem } from "@/components/ui/radio-group";
import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from "@/components/ui/select";
import { useToast } from "@/hooks/use-toast";
import { apiRequest } from "@/lib/queryClient";
import { Stars, Clock, CalendarDays, Building, Users, Sparkles, Send } from "lucide-react";

const formSchema = z.object({
  name: z.string().min(2, {
    message: "Name must be at least 2 characters.",
  }),
  email: z.string().email({
    message: "Please enter a valid email address.",
  }),
  phone: z.string().optional(),
  locationType: z.string().min(1, {
    message: "Please select a location type.",
  }),
  eventType: z.string().min(1, {
    message: "Please describe your event or shooting type.",
  }),
  budget: z.preprocess(
    (val) => (val === "" ? undefined : Number(val)),
    z.number().positive().optional()
  ),
  dateNeeded: z.string().optional(),
  description: z.string().min(10, {
    message: "Please provide at least 10 characters describing what you're looking for.",
  }),
  preferredContactMethod: z.enum(["email", "phone"], {
    required_error: "Please select a preferred contact method.",
  }),
});

type FormValues = z.infer<typeof formSchema>;

export function ConciergePage() {
  const { toast } = useToast();
  const [isSubmitting, setIsSubmitting] = useState(false);
  const [isSuccess, setIsSuccess] = useState(false);

  const form = useForm<FormValues>({
    resolver: zodResolver(formSchema),
    defaultValues: {
      name: "",
      email: "",
      phone: "",
      locationType: "",
      eventType: "",
      budget: undefined,
      dateNeeded: "",
      description: "",
      preferredContactMethod: "email",
    },
  });

  async function onSubmit(data: FormValues) {
    setIsSubmitting(true);
    try {
      await apiRequest({
        url: "/api/concierge",
        method: "POST",
        body: data,
      });

      toast({
        title: "Concierge Request Submitted",
        description: "We'll be in touch soon to discuss your requirements.",
      });

      setIsSuccess(true);
      form.reset();
    } catch (error) {
      console.error("Failed to submit concierge request:", error);
      toast({
        title: "Submission Failed",
        description: "There was a problem submitting your request. Please try again.",
        variant: "destructive",
      });
    } finally {
      setIsSubmitting(false);
    }
  }

  return (
    <AppLayout>
      {/* Hero Section with Gradient Background */}
      <div className="bg-gradient-to-br from-black via-gray-900 to-amber-900 text-white py-16">
        <div className="container mx-auto px-4 md:px-6 text-center">
          <div className="inline-flex items-center gap-2 bg-white/10 backdrop-blur-sm px-5 py-2 rounded-full mb-8 mx-auto">
            <Sparkles className="h-5 w-5 text-amber-400" />
            <span className="text-sm font-medium">Premium Experience</span>
          </div>
          
          <h1 className="text-5xl md:text-6xl font-bold mb-6 bg-gradient-to-r from-amber-200 to-amber-400 bg-clip-text text-transparent">
            Blocmark Concierge Service
          </h1>
          
          <p className="text-xl text-amber-50/90 max-w-3xl mx-auto mb-10">
            Our elite concierge service unlocks access to the world's most extraordinary locations for your unique needs.
          </p>
          
          <div className="flex flex-wrap justify-center gap-4 mb-12">
            <div className="bg-white/5 backdrop-blur-md px-6 py-3 rounded-full">
              <span className="text-amber-300">Fashion Shoots</span>
            </div>
            <div className="bg-white/5 backdrop-blur-md px-6 py-3 rounded-full">
              <span className="text-amber-300">Film Productions</span>
            </div>
            <div className="bg-white/5 backdrop-blur-md px-6 py-3 rounded-full">
              <span className="text-amber-300">Private Events</span>
            </div>
            <div className="bg-white/5 backdrop-blur-md px-6 py-3 rounded-full">
              <span className="text-amber-300">Destination Weddings</span>
            </div>
          </div>
        </div>
      </div>
      
      {/* Main Content - with more subdued dark theme */}
      <div className="bg-gradient-to-b from-gray-900 to-black text-white py-16 px-4 md:px-6">
        <div className="container mx-auto grid grid-cols-1 lg:grid-cols-2 gap-16">
          {/* Left side - Information */}
          <div>
            <p className="text-lg text-gray-300 mb-10 leading-relaxed">
              Whether you're planning a fashion shoot in Paris, a wedding in Tuscany, or a music video in Tokyo â€“ our team 
              of location experts will curate the perfect space tailored to your exact specifications.
            </p>
            
            <div className="grid grid-cols-1 md:grid-cols-2 gap-8">
              <div className="bg-gray-900/80 backdrop-blur-sm p-6 rounded-xl border border-gray-800 transform transition-transform hover:scale-105 hover:border-amber-800/30">
                <div className="p-3 bg-gray-800 rounded-full inline-block mb-4">
                  <Stars className="h-7 w-7 text-amber-400" />
                </div>
                <h3 className="text-xl font-semibold mb-3 text-white">VIP Treatment</h3>
                <p className="text-gray-400">
                  Enjoy personalized service with a dedicated concierge manager assigned to your request.
                </p>
              </div>
              
              <div className="bg-gray-900/80 backdrop-blur-sm p-6 rounded-xl border border-gray-800 transform transition-transform hover:scale-105 hover:border-amber-800/30">
                <div className="p-3 bg-gray-800 rounded-full inline-block mb-4">
                  <Building className="h-7 w-7 text-amber-400" />
                </div>
                <h3 className="text-xl font-semibold mb-3 text-white">Exclusive Access</h3>
                <p className="text-gray-400">
                  Gain entrance to locations that aren't publicly listed, from private estates to historic venues.
                </p>
              </div>
              
              <div className="bg-gray-900/80 backdrop-blur-sm p-6 rounded-xl border border-gray-800 transform transition-transform hover:scale-105 hover:border-amber-800/30">
                <div className="p-3 bg-gray-800 rounded-full inline-block mb-4">
                  <Clock className="h-7 w-7 text-amber-400" />
                </div>
                <h3 className="text-xl font-semibold mb-3 text-white">Fast Turnaround</h3>
                <p className="text-gray-400">
                  Urgent requests are our specialty. We can secure exceptional locations with very short notice.
                </p>
              </div>
              
              <div className="bg-gray-900/80 backdrop-blur-sm p-6 rounded-xl border border-gray-800 transform transition-transform hover:scale-105 hover:border-amber-800/30">
                <div className="p-3 bg-gray-800 rounded-full inline-block mb-4">
                  <Users className="h-7 w-7 text-amber-400" />
                </div>
                <h3 className="text-xl font-semibold mb-3 text-white">Full Support Team</h3>
                <p className="text-gray-400">
                  Beyond locations, we handle permits, logistics, equipment, and additional services.
                </p>
              </div>
            </div>
          </div>
          
          {/* Right side - Form */}
          <div className="bg-gray-900/80 backdrop-blur-md p-8 rounded-2xl shadow-2xl border border-gray-800 relative overflow-hidden">
            {/* Decorative pattern at top-right corner */}
            <div className="absolute top-0 right-0 w-40 h-40 bg-gray-300 rounded-bl-full opacity-10"></div>
            
            {/* Decorative dots pattern bottom-left corner */}
            <div className="absolute bottom-0 left-0 w-32 h-32 opacity-10">
              <div className="grid grid-cols-4 gap-2">
                {[...Array(16)].map((_, i) => (
                  <div key={i} className="w-2 h-2 rounded-full bg-gray-400"></div>
                ))}
              </div>
            </div>
            
            <div className="relative z-10">
              {isSuccess ? (
                <div className="text-center py-12">
                  <div className="bg-gray-600/30 p-6 rounded-full inline-flex items-center justify-center mb-8 shadow-md backdrop-blur-sm">
                    <Sparkles className="h-12 w-12 text-amber-400" />
                  </div>
                  <h2 className="text-3xl font-bold mb-4 text-white">Request Received!</h2>
                  <p className="text-gray-300 mb-10 text-lg max-w-md mx-auto">
                    Thank you for your interest in our Concierge Service. Our team will review your request 
                    and contact you within 24 hours to discuss your requirements in detail.
                  </p>
                  <Button 
                    onClick={() => setIsSuccess(false)}
                    className="bg-amber-500 hover:bg-amber-600 text-black font-medium px-8 py-2.5 rounded-md shadow-md transition-all duration-300"
                  >
                    Submit Another Request
                  </Button>
                </div>
              ) : (
                <div>
                  <div className="inline-flex items-center gap-2 bg-gray-800 px-4 py-1.5 rounded-full mb-6">
                    <Send className="h-4 w-4 text-amber-400" />
                    <span className="text-sm font-medium text-gray-300">Request Form</span>
                  </div>
                  <h2 className="text-3xl font-bold mb-8 text-white">Tell Us What You Need</h2>
                  <Form {...form}>
                    <form id="concierge-form" onSubmit={form.handleSubmit(onSubmit)} className="space-y-7">
                      <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                        <FormField
                          control={form.control}
                          name="name"
                          render={({ field }) => (
                            <FormItem>
                              <FormLabel className="text-gray-300">Full Name</FormLabel>
                              <FormControl>
                                <Input placeholder="John Doe" className="bg-black/30 border-gray-700 text-white" {...field} />
                              </FormControl>
                              <FormMessage />
                            </FormItem>
                          )}
                        />
                        
                        <FormField
                          control={form.control}
                          name="email"
                          render={({ field }) => (
                            <FormItem>
                              <FormLabel className="text-gray-300">Email</FormLabel>
                              <FormControl>
                                <Input placeholder="you@example.com" type="email" className="bg-black/30 border-gray-700 text-white" {...field} />
                              </FormControl>
                              <FormMessage />
                            </FormItem>
                          )}
                        />
                      </div>
                      
                      <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                        <FormField
                          control={form.control}
                          name="phone"
                          render={({ field }) => (
                            <FormItem>
                              <FormLabel className="text-gray-300">Phone (Optional)</FormLabel>
                              <FormControl>
                                <Input placeholder="+1 (555) 123-4567" className="bg-black/30 border-gray-700 text-white" {...field} />
                              </FormControl>
                              <FormDescription className="text-gray-500">
                                For urgent requests, we may need to call you.
                              </FormDescription>
                              <FormMessage />
                            </FormItem>
                          )}
                        />
                        
                        <FormField
                          control={form.control}
                          name="budget"
                          render={({ field }) => (
                            <FormItem>
                              <FormLabel className="text-gray-300">Budget Range (Optional)</FormLabel>
                              <FormControl>
                                <Input 
                                  type="number" 
                                  placeholder="5000" 
                                  className="bg-black/30 border-gray-700 text-white"
                                  {...field}
                                  value={field.value || ''}
                                  onChange={(e) => field.onChange(e.target.value === '' ? undefined : Number(e.target.value))}
                                />
                              </FormControl>
                              <FormDescription className="text-gray-500">
                                Approximate budget in USD
                              </FormDescription>
                              <FormMessage />
                            </FormItem>
                          )}
                        />
                      </div>
                      
                      <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                        <FormField
                          control={form.control}
                          name="locationType"
                          render={({ field }) => (
                            <FormItem>
                              <FormLabel className="text-gray-300">Location Type</FormLabel>
                              <Select onValueChange={field.onChange} defaultValue={field.value}>
                                <FormControl>
                                  <SelectTrigger className="bg-black/30 border-gray-700 text-white">
                                    <SelectValue placeholder="Select location type" />
                                  </SelectTrigger>
                                </FormControl>
                                <SelectContent>
                                  <SelectItem value="studio">Photo/Film Studio</SelectItem>
                                  <SelectItem value="mansion">Mansion/Estate</SelectItem>
                                  <SelectItem value="warehouse">Warehouse/Industrial</SelectItem>
                                  <SelectItem value="venue">Event Venue</SelectItem>
                                  <SelectItem value="outdoor">Outdoor Location</SelectItem>
                                  <SelectItem value="rooftop">Rooftop</SelectItem>
                                  <SelectItem value="office">Office/Commercial</SelectItem>
                                  <SelectItem value="retail">Retail Space</SelectItem>
                                  <SelectItem value="historical">Historical Building</SelectItem>
                                  <SelectItem value="other">Other (Specify in Description)</SelectItem>
                                </SelectContent>
                              </Select>
                              <FormMessage />
                            </FormItem>
                          )}
                        />
                        
                        <FormField
                          control={form.control}
                          name="eventType"
                          render={({ field }) => (
                            <FormItem>
                              <FormLabel className="text-gray-300">Event/Shoot Type</FormLabel>
                              <Select onValueChange={field.onChange} defaultValue={field.value}>
                                <FormControl>
                                  <SelectTrigger className="bg-black/30 border-gray-700 text-white">
                                    <SelectValue placeholder="Select event type" />
                                  </SelectTrigger>
                                </FormControl>
                                <SelectContent>
                                  <SelectItem value="photoshoot">Photo Shoot</SelectItem>
                                  <SelectItem value="film">Film/TV Production</SelectItem>
                                  <SelectItem value="music">Music Video</SelectItem>
                                  <SelectItem value="wedding">Wedding</SelectItem>
                                  <SelectItem value="corporate">Corporate Event</SelectItem>
                                  <SelectItem value="party">Private Party</SelectItem>
                                  <SelectItem value="exhibition">Exhibition/Show</SelectItem>
                                  <SelectItem value="popup">Pop-up Shop/Restaurant</SelectItem>
                                  <SelectItem value="other">Other (Specify in Description)</SelectItem>
                                </SelectContent>
                              </Select>
                              <FormMessage />
                            </FormItem>
                          )}
                        />
                      </div>
                      
                      <FormField
                        control={form.control}
                        name="dateNeeded"
                        render={({ field }) => (
                          <FormItem>
                            <FormLabel className="text-gray-300">Date Needed (Optional)</FormLabel>
                            <FormControl>
                              <div className="flex items-center">
                                <CalendarDays className="w-5 h-5 mr-2 text-gray-400" />
                                <Input type="date" className="bg-black/30 border-gray-700 text-white" {...field} />
                              </div>
                            </FormControl>
                            <FormDescription className="text-gray-500">
                              When do you need the location? Leave blank if flexible.
                            </FormDescription>
                            <FormMessage />
                          </FormItem>
                        )}
                      />
                      
                      <FormField
                        control={form.control}
                        name="description"
                        render={({ field }) => (
                          <FormItem>
                            <FormLabel className="text-gray-300">Tell Us About Your Requirements</FormLabel>
                            <FormControl>
                              <Textarea 
                                placeholder="Please describe what you're looking for in detail. Include any specific requirements, location preferences, number of attendees, etc."
                                className="min-h-[120px] bg-black/30 border-gray-700 text-white placeholder:text-gray-400"
                                {...field} 
                              />
                            </FormControl>
                            <FormMessage />
                          </FormItem>
                        )}
                      />
                      
                      <FormField
                        control={form.control}
                        name="preferredContactMethod"
                        render={({ field }) => (
                          <FormItem className="space-y-3">
                            <FormLabel className="text-gray-300">Preferred Contact Method</FormLabel>
                            <FormControl>
                              <RadioGroup
                                onValueChange={field.onChange}
                                defaultValue={field.value}
                                className="flex flex-col space-y-1"
                              >
                                <FormItem className="flex items-center space-x-3 space-y-0">
                                  <FormControl>
                                    <RadioGroupItem value="email" className="border-gray-400 text-gray-200" />
                                  </FormControl>
                                  <FormLabel className="font-normal text-gray-200">
                                    Email
                                  </FormLabel>
                                </FormItem>
                                <FormItem className="flex items-center space-x-3 space-y-0">
                                  <FormControl>
                                    <RadioGroupItem value="phone" className="border-gray-400 text-gray-200" />
                                  </FormControl>
                                  <FormLabel className="font-normal text-gray-200">
                                    Phone Call
                                  </FormLabel>
                                </FormItem>
                              </RadioGroup>
                            </FormControl>
                            <FormMessage />
                          </FormItem>
                        )}
                      />
                      
                      <Button 
                        type="submit" 
                        className="w-full mt-6 bg-gradient-to-r from-gray-700 to-gray-800 hover:from-gray-800 hover:to-gray-900 text-white font-medium py-6 rounded-xl shadow-lg hover:shadow-gray-700/30 transition-all duration-300"
                        disabled={isSubmitting}
                      >
                        {isSubmitting ? (
                          <span className="flex items-center justify-center gap-3">
                            <span className="animate-spin h-5 w-5 border-3 border-white border-t-transparent rounded-full" />
                            <span className="text-lg">Processing Your Request...</span>
                          </span>
                        ) : (
                          <span className="flex items-center justify-center gap-3">
                            <span className="bg-white/10 p-2 rounded-full">
                              <Send className="h-5 w-5" />
                            </span>
                            <span className="text-lg">Submit Your Concierge Request</span>
                          </span>
                        )}
                      </Button>
                    </form>
                  </Form>
                </div>
              )}
            </div>
          </div>

          </div>
        </div>
      </div>
      
      {/* Testimonials Section - Full-width section that spans the entire page width */}
      <div className="w-full bg-gradient-to-b from-black/80 to-gray-900/80 py-20 mt-20 border-t border-gray-800">
        {/* Center the content with proper max-width and padding for responsiveness */}
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="flex flex-col items-center mb-16">
            <div className="w-20 h-1 bg-gradient-to-r from-gray-500 to-gray-700 mb-6"></div>
            <h2 className="text-4xl font-bold text-white mb-4 text-center">What Our Clients Say</h2>
            <div className="w-16 h-1 bg-gradient-to-r from-gray-700 to-gray-500 mb-6"></div>
            <p className="text-gray-300 max-w-2xl mx-auto text-center text-lg">
              Discover how our Concierge Service has helped clients find exceptional spaces for their projects
            </p>
          </div>
          
          {/* Centered testimonials grid */}
          <div className="grid grid-cols-1 md:grid-cols-3 gap-8 xl:gap-10 mx-auto">
            {/* Testimonial 1 */}
            <div className="transform transition-all duration-300 hover:translate-y-[-8px] group">
              <div className="bg-gradient-to-br from-gray-900 to-black p-8 rounded-xl border border-gray-800 shadow-xl relative h-full flex flex-col group-hover:border-gray-700">
                <div className="absolute -top-5 right-8">
                  <span className="text-6xl text-gray-800">"</span>
                </div>
                <div className="flex-1">
                  <div className="h-1.5 w-12 bg-gradient-to-r from-gray-600 to-gray-700 mb-6 rounded-full"></div>
                  <p className="text-gray-300 mb-8 italic leading-relaxed">
                    "The Concierge Service saved me weeks of location scouting. Within 48 hours I had three perfect venue options for my fashion shoot. The team understood exactly what I needed."
                  </p>
                </div>
                <div className="flex items-center mt-auto">
                  <div className="w-14 h-14 bg-gradient-to-br from-gray-800 to-gray-900 rounded-full flex items-center justify-center text-white font-semibold mr-4 border border-gray-800">
                    MT
                  </div>
                  <div>
                    <p className="font-medium text-white">Mira Thompson</p>
                    <p className="text-gray-400 text-sm">Fashion Photographer, NYC</p>
                  </div>
                </div>
              </div>
            </div>
            
            {/* Testimonial 2 */}
            <div className="transform transition-all duration-300 hover:translate-y-[-8px] group">
              <div className="bg-gradient-to-br from-gray-900 to-black p-8 rounded-xl border border-gray-800 shadow-xl relative h-full flex flex-col group-hover:border-gray-700">
                <div className="absolute -top-5 right-8">
                  <span className="text-6xl text-gray-800">"</span>
                </div>
                <div className="flex-1">
                  <div className="h-1.5 w-12 bg-gradient-to-r from-gray-600 to-gray-700 mb-6 rounded-full"></div>
                  <p className="text-gray-300 mb-8 italic leading-relaxed">
                    "When our original filming location fell through at the last minute, the Concierge team worked miracles. They found us a historical mansion that was even better than our original choice."
                  </p>
                </div>
                <div className="flex items-center mt-auto">
                  <div className="w-14 h-14 bg-gradient-to-br from-gray-800 to-gray-900 rounded-full flex items-center justify-center text-white font-semibold mr-4 border border-gray-800">
                    JL
                  </div>
                  <div>
                    <p className="font-medium text-white">James Lee</p>
                    <p className="text-gray-400 text-sm">Film Producer, Los Angeles</p>
                  </div>
                </div>
              </div>
            </div>
            
            {/* Testimonial 3 */}
            <div className="transform transition-all duration-300 hover:translate-y-[-8px] group">
              <div className="bg-gradient-to-br from-gray-900 to-black p-8 rounded-xl border border-gray-800 shadow-xl relative h-full flex flex-col group-hover:border-gray-700">
                <div className="absolute -top-5 right-8">
                  <span className="text-6xl text-gray-800">"</span>
                </div>
                <div className="flex-1">
                  <div className="h-1.5 w-12 bg-gradient-to-r from-gray-600 to-gray-700 mb-6 rounded-full"></div>
                  <p className="text-gray-300 mb-8 italic leading-relaxed">
                    "For our company's 10th anniversary, we needed a truly unique venue. The Concierge Service not only found the perfect rooftop space but also helped coordinate with vendors for a seamless experience."
                  </p>
                </div>
                <div className="flex items-center mt-auto">
                  <div className="w-14 h-14 bg-gradient-to-br from-gray-800 to-gray-900 rounded-full flex items-center justify-center text-white font-semibold mr-4 border border-gray-800">
                    SP
                  </div>
                  <div>
                    <p className="font-medium text-white">Sarah Parker</p>
                    <p className="text-gray-400 text-sm">Marketing Director, London</p>
                  </div>
                </div>
              </div>
            </div>
          </div>
          
          <div className="mt-16 text-center">
            <p className="text-white font-medium mb-8 text-xl">Join our satisfied clients and find your perfect location</p>
            <button 
              onClick={() => document.getElementById('concierge-form')?.scrollIntoView({ behavior: 'smooth' })} 
              className="px-10 py-4 bg-gradient-to-r from-gray-700 to-gray-800 hover:from-gray-800 hover:to-gray-900 text-white rounded-xl shadow-lg transition-all duration-300 font-medium border border-gray-700 hover:border-gray-600 transform hover:scale-105"
            >
              Get Started Now
            </button>
          </div>
        </div>
      </div>
    </AppLayout>
  );
}

export default ConciergePage;